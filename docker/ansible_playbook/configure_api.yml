######################################################################
# Update security/limits.conf
######################################################################

- name: Pull API app source from github repo
  git: repo=https://github.com/biothings/{{api_name}}.git dest=/home/biothings/{{ api_name }} version={{api_version}}
  become_user: "biothings"
  become: true

- name: Install API requirements
  shell: "source $HOME/pyenv/bin/activate && pip install -r requirements_hub.txt"
  args:
    executable: /bin/bash
    chdir: /home/biothings/{{ api_name }}
  become_user: "biothings"
  become: true

- name: Template out update_api
  template: mode=0755 src=templates/update_api dest=/home/biothings/bin/update_api
- name: Template out run_studio
  template: mode=0755 src=templates/run_api dest=/home/biothings/bin/run_api

# next tasks are about adjusting the config files
# - config.py comes from biothings_studio
# - but we want to use config_hub from the API, instead of biothings_studio's
# - and then we want to override some values with a config_api file
- name: Copy studio config to API
  copy:
    # Ex: app_name = "biothings_studio" and api_name = "mygene.info"
    src: /home/biothings/{{ app_name }}/config.py
    dest: /home/biothings/{{ api_name }}/src/
  become_user: "biothings"
  become: true

- name: Template out config_api.py file
  template: owner=biothings group=biothings mode=0640 src=templates/config_api.py dest=/home/biothings/{{ api_name }}/src/config_api.py
  become_user: "biothings"
  become: true

- name: Remove config_studio_hub
  lineinfile: dest=/home/biothings/{{ api_name }}/src/config.py line="from config_studio_hub import *" state=absent
  become_user: "biothings"
  become: true

- name: Inject config_hub and config_api
  # overwrite some config variable, such as port, name, reloader, etc...
  lineinfile: dest=/home/biothings/{{ api_name }}/src/config.py  line="{{ item.line }}" insertbefore=BOF
  with_items:
    - {"line":"from config_api import *"}
    - {"line":"from config_hub import *"}

- name: biothings api as subfolder
  file: src=/home/biothings/biothings.api/biothings dest=/home/biothings/{{ api_name }}/src/biothings state=link
  become_user: "biothings"
  become: true

- stat: path=/home/biothings/{{ api_name }}/src/plugins
  register: plugins_exists
# plugins in the studio originally are in /data/biothings_studio/plugins
# but there could be plugins defined directly in the API folder, so instead
# of dealing with multiple plugin folders, symlink the API one to /data/...
# First delete directory then symlink
- name: delete plugins dir
  file: state=absent path=/data/{{ app_name }}/plugins
  when: plugins_exists.stat.exists == True
- name: symlink APIs plugins
  file: src=/home/biothings/{{ api_name }}/src/plugins dest=/data/{{ app_name }}/plugins state=link
  when: plugins_exists.stat.exists == True

- name: Generate RSA host key
  command : ssh-keygen -q -t rsa -f /home/biothings/{{ api_name }}/src/bin/ssh_host_key -C "" -N "" creates=/home/biothings/{{ api_name }}/src/bin/ssh_host_key
  become_user: "biothings"
  become: true
