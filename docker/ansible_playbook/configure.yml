#####################################################################
# Update security/limits.conf
#####################################################################

- name: Update /etc/security/limits.conf
  lineinfile: dest=/etc/security/limits.conf insertbefore="^# End of file" line="{{ item.line }}" mode=0644 owner=root group=root
  become: yes
  with_items:
    - {"line":"elasticsearch soft nofile {{ software.common_configurations.elasticsearch.soft_file_limit }}"}
    - {"line":"elasticsearch hard nofile {{ software.common_configurations.elasticsearch.hard_file_limit }}"}

###################
# Install Cerebro #
###################

- name: Configure Cerebro
  lineinfile: dest=/usr/local/cerebro/conf/application.conf line="{{ item }}" mode=0644 owner=root group=root insertafter="^hosts ="
  with_items:
    - '},'
    - '  name = "BioThings Studio"'
    - '  host = "http://localhost:9200"'
    - '{'

- name: make sure Cerebro (make sure what??)
  file:
    path: /usr/local/cerebro
    owner: elasticsearch

##################################################
# Install mongodb
##################################################

- name: template out mongod.conf
  template: src=templates/mongod.conf dest=/etc/mongod.conf owner=root group=root mode=0644
  become: yes

- name: template out rsconfig
  template: src=templates/rsconfig.js dest=/tmp/rsconfig.js owner=root group=root mode=0644
  become: yes

##################################################
# Install nginx
##################################################

- name: Template out nginx.conf to server
  template: src=templates/nginx.conf dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  become: yes

- name: nginx logs directory
  file: path=/data/logs/nginx state=directory owner=www-data group=www-data

##################################################
# Install python virtualenv
##################################################

- name: Install virtualenv
  pip: name=virtualenv executable=pip3
  become: yes

###################################################
# Setup home directory, biothings app codebase
###################################################

- name: biothings group
  group: name=biothings

- name: biothings user
  # biothings/biothings
  user: name=biothings group=biothings shell=/bin/bash password="$6$ErzOioVY$jPVZ68Lb6eUZ3cy5cYvkrHjXJOQqvyUzBxXa7u2QkQxEZtPcSMeZvoVaJ1BTNAqTEr3Kby6lMMd1kZpQNp/0r1"

- name: Create home directory structure
  file: path=/home/biothings state=directory owner=biothings group=biothings
  become_user: "biothings"
  become: true

- name: Manually create the initial virtualenv
  command: virtualenv /home/biothings/pyenv -p python3 creates="/home/biothings/pyenv"
  become_user: "biothings"
  become: true

- name: bashrc
  lineinfile: path=/home/biothings/.bashrc line='source $HOME/pyenv/bin/activate'
  become_user: "biothings"
  become: true

- name: pythonpath
  lineinfile: path=/home/biothings/.bashrc line='export PYTHONPATH=.:$PYTHONPATH'
  become_user: "biothings"
  become: true

- name: locale
  lineinfile: path=/home/biothings/.bashrc line='export LC_ALL=C.UTF-8'
  become_user: "biothings"
  become: true

# Logs folder
- name: logs directory
  file: path=/data/logs state=directory
- name: nginx logs directory
  file: path=/data/logs/nginx state=directory owner=www-data group=www-data
- name: supervisor logs directory
  file: path=/data/logs/supervisor state=directory owner=www-data group=www-data
- name: elasticsearch logs directory
  file: path=/data/logs/elasticsearch state=directory owner=elasticsearch group=elasticsearch
- name: mongodb logs directory
  file: path="{{ software.common_configurations.mongodb.logpath }}" state=directory owner=mongodb group=mongodb
# studio/api folder
- name: app data directory
  file: path=/data/{{ app_name }} state=directory owner=biothings group=biothings
- name: data plugins directory
  file: path=/data/{{ app_name }}/plugins state=directory owner=biothings group=biothings
- name: data sources directory
  file: path=/data/{{ app_name }}/datasources state=directory owner=biothings group=biothings
- name: data upload directory
  file: path=/data/{{ app_name }}/dataupload state=directory owner=biothings group=biothings
# misc
- name: run directory
  file: path=/data/run state=directory owner=biothings group=biothings
- name: conf directory
  file: path=/data/conf state=directory
# database data folders
- name: elasticsearch data directory
  file: path=/data/elasticsearch state=directory owner=elasticsearch group=elasticsearch
- name: mongodb data directory
  file: path="{{ software.common_configurations.mongodb.dbpath }}" state=directory owner=mongodb group=mongodb



- name: Pull studio app source from github repo
  git: repo={{ software.web_node.studio_repository }} dest=/home/biothings/{{ app_name }} version={{software.web_node.studio_git_version}}
  become_user: "biothings"
  become: true

- name: biothings (override requirement_web.txt version)
  git: repo=https://github.com/biothings/biothings.api.git dest=/home/biothings/biothings.api version={{ software.web_node.biothings_git_version }}
  become_user: "biothings"
  become: true

- name: Install biothings lib requirements into virtualenv
  shell: "source $HOME/pyenv/bin/activate && pip install .[hub]"
  args:
    executable: /bin/bash
    chdir: /home/biothings/biothings.api
  become_user: "biothings"
  become: true

- name: biothings api as subfolder
  file: src=/home/biothings/biothings.api/biothings dest=/home/biothings/{{ app_name }}/biothings state=link
  become_user: "biothings"
  become: true

- name: Create ssh keys
  shell: echo "y\n" | ssh-keygen -f /home/biothings/{{ app_name }}/bin/ssh_host_key -q -N ""
  become_user: "biothings"
  become: true

- name: pretty mongo shell
  lineinfile: dest=/home/biothings/.mongorc.js line="DBQuery.prototype._prettyShell = true" mode=0644 owner=biothings group=biothings insertafter=EOF create=yes

#- name: Template out config.py file
#  template: owner=biothings group=biothings mode=0640 src=templates/config.py dest=/home/biothings/{{ app_name }}/src/config.py
#  become_user: "biothings"
#  become: true

- name: Template out docker entry point
  template: mode=0755 src=templates/docker-entrypoint.sh dest=/docker-entrypoint.sh
- name: home bin
  file: path=/home/biothings/bin state=directory owner=biothings group=biothings
- name: Template out update_biothings
  template: mode=0755 src=templates/update_biothings dest=/home/biothings/bin/update_biothings
- name: Template out update_studio
  template: mode=0755 src=templates/update_studio dest=/home/biothings/bin/update_studio
- name: Template out run_studio
  template: mode=0755 src=templates/run_studio dest=/home/biothings/bin/run_studio


################################################
# Update elasticsearch.yml
################################################

- name: es backups data directory (repo type fs)
  file: path=/data/es_backups mode=0777 state=directory owner=elasticsearch group=elasticsearch

- name: Update elasticsearch.yml file
  lineinfile: dest=/etc/elasticsearch/elasticsearch.yml line="{{ item }}" mode=0644 owner=root group=root insertafter=EOF
  become: yes
  with_items:
    - "#######"
    - "cluster.name: {{ cluster.name }}"
    - "{{ software.web_node.elasticsearch.elasticsearch_yml }}"
    - "{{ software.common_configurations.elasticsearch.elasticsearch_yml }}"
    # this will avoid to have max virtual memory areas vm.max_map_count [65530] likely too low
    # (not suitable for production with a cluster)
    - "discovery.type: single-node"
    - 'path.repo: ["/data/es_backups"]'

- name: update elasticsearch.yml again replacing some values
  replace: dest=/etc/elasticsearch/elasticsearch.yml replace="{{ item.line }}" regexp="{{ item.re }}"
  become: yes
  with_items:
    - {"line": "path.data: /data/elasticsearch", "re": "^path.data.*$"}
    - {"line": "path.logs: /data/logs/elasticsearch", "re": "^path.logs.*$"}

